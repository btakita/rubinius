= Installation guide for Rubinius as of 10/2008

If you are having trouble with installation, the #rubinius IRC channel on
irc://irc.freenode.net will help.


== Getting the software and required libraries

There are a few things that you need in order to be able to build and run
Rubinius.  Once you have installed the general requirements, install the Gems
needed and then any platform-specific requirements.


=== General requirements

* "GCC 4.x (both g++ and gcc)":http://gcc.gnu.org/
* "GNU Bison":http://www.gnu.org/software/bison/
* "Ruby version >= 1.8.4 (the Ruby language)":http://www.ruby-lang.org/
* "RubyGems (Ruby package manager)":http://www.rubygems.org/
* "Git (source control used by rubinius)":http://git.or.cz/
* "zlib compression library":http://www.zlib.net/

Most systems already use GNU Make as their default, but for
those using a BSD Make:

* "gmake (GNU Make)":http://savannah.gnu.org/projects/make/

Each package may have requirements of its own, of course.

If you want to avoid overriding your existing environment, you may want to
install everything under its own prefix (such as /usr/local) and to name
programs so they don't collide with your existing installation (such as naming
gmake 'gmake').  You can then adjust your PATH environment variable as needed
for rubinius development.


=== Requirements through RubyGems

* rake
* ParseTree

Rake may be obtained with the `gem install` command. See `gem help` and
http://www.rubygems.org for more information.


=== System-dependent requirements


==== FreeBSD, OpenBSD

* "libexecinfo (backtrace utilities)":http://www.freshports.org/devel/libexecinfo


==== Debian/Ubuntu family systems

For the build to succeed you will need these packages:

* ruby-dev
* libreadline5-dev
* zlib1g-dev
* libssl-dev

== Rubinius itself

You need to check Rubinius out through Git (which we just installed). The
invocation looks like this:

  git clone git://github.com/evanphx/rubinius.git

For more information on Rubinius' best practices for git, see "using
git":http://rubinius.lighthouseapp.com/projects/5089/using-git


== Compiling Rubinius

The C++ VM is compiled using Rake. Typically, it will be as simple as:

  rake build


== Installing Rubinius

The C++ should not currently be installed separately.


== Running Rubinius

Once compiled, you can verify the VM works:

  bin/rbx -v

Rubinius generally works like Ruby from the command-line. For example:

  bin/rbx -e 'puts "Hello!"'


== Troubleshooting and platform-specific notes

Right now, the very best thing to do is to join the #rubinius IRC channel on
irc://irc.freenode.net.  The forums here are an alternative method though the
response is probably not going to be as swift. We will try to collect tips
here, too.

